{"version":3,"sources":["components/Navbar.js","components/UserFunctions.js","components/Landing.js","components/Login.js","components/Register.js","components/Profile.js","components/Post.js","components/Settings.js","App.js","reportWebVitals.js","registerServiceWorker.js","index.js"],"names":["Landing","props","state","user_id","hits","e","preventDefault","localStorage","removeItem","this","history","push","getItem","decoded","jwtDecode","setState","id","loginRegLink","className","to","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","usertoken","Component","withRouter","comments","newComment","axios","post","commentText","question_id","post_id","catch","err","console","log","questionTitle","questionText","errors","onChange","onSubmit","changeComment","commentFunction","target","name","value","newPost","new_question","then","res","new_comment","fetch","response","json","data","userInput","noValidate","htmlFor","placeholder","loginNew","map","hit","createdAt","Login","email","password","user","setItem","login","Register","first_name","last_name","newUser","register","Profile","ID","match","params","posts","token","jwt_decode","newID","JSON","stringify","questions","div","userForm","Post","comments_user","likes","edited","liked","new_like","newData","edits","get","decode","error","length","commentsForUser","style","textAlign","comment","Settings","oldPassword","newPassword","oldPWD","newPWD","changeUserInfo","App","Navbar","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.259d865c.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport \"../styles/navbar.css\";\nclass Landing extends Component {\n  logOut(e) {\n    e.preventDefault()\n    localStorage.removeItem('usertoken')\n    this.props.history.push(`/`)\n  }\n  constructor(props) {\n    super(props) \n    this.state = {\n      user_id: 0,\n      hits: []\n    }\n  }\n  componentDidMount() {\n    const token = localStorage.getItem('usertoken');\n    if(token) {\n      const decoded = jwtDecode(localStorage.getItem('usertoken'));\n      this.setState({user_id:decoded.id})\n    }\n  }\n  \n\n  render() {\n    const loginRegLink = (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Login\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Register\n          </Link>\n        </li>\n      </ul>\n    )\n\n    const userLink = (\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to={`/profile/${this.state.user_id}`} className=\"nav-link\">\n            Profile\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n        \n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n            Logout\n          </a>\n        </li>\n      </ul>\n    )\n\n    return (\n      <nav className=\"navbar navbar-expand-lg rounded\">\n         <button\n          className=\"navbar-toggler btn-outline-light\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarsExample10\"\n          aria-controls=\"navbarsExample10\"\n          aria-expanded=\"true\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"fa fa-bars\" />\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-md-center\"\n          id=\"navbarsExample10\"\n        >\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n          </ul>\n          {localStorage.usertoken ? userLink : loginRegLink}\n        </div>\n        <h4>askIT</h4>\n\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(Landing)","import axios from 'axios'\nconst API = '/users/changeInfo';\nexport const register = newUser => {\n  return axios\n    .post('users/register', {\n      first_name: newUser.first_name,\n      last_name: newUser.last_name,\n      email: newUser.email,\n      password: newUser.password\n    })\n    .then(response => {\n      console.log('Registered')\n    })\n}\n\nexport const login = user => {\n  return axios\n    .post('/users/login', {\n      email: user.email,\n      password: user.password,\n      id: user.id\n    })\n    .then(response => {\n      localStorage.setItem('usertoken', response.data)\n      return response.data\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\nexport const posts = newPost => {\n  return axios\n    .post('questions/create', {\n      questionTitle: newPost.questionTitle,\n      questionText: newPost.questionText,\n      user_id: newPost.user_id,\n      })\n    .catch(err => {\n      console.log(err)\n    })\n}\nexport const edit = newData => {\n  return axios.get('/questions/edit', {\n    id: newData.id,\n    questionText: newData.questionText,\n    questionTitle: newData.questionTitle\n  }).catch(err=>{console.log(err)})\n}\nexport const comments = newComment => {\n  return axios\n    .post('/comments/addComment', {\n      commentText: newComment.commentText,\n      user_id: newComment.user_id,\n      question_id:newComment.post_id,\n      })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const sendData = data => {\n  return axios\n  .get('/questions/:id', {\n    id: data.id,\n  })\n  .catch(err => {\n    console.log(err);\n  })\n}\nexport const sendProfileId = userId => {\n  return axios \n  .post('/users/findID', {\n    id: userId.user_id\n  }).catch(err => {\n\n    console.log(\"error from sendProfileId, UserFunctions.js\" + err);\n  })\n}\nexport const sendID = userId => {\n  return axios\n  .post('/questions/showMine', {\n    user_id: userId.user_id,\n  }, \n {\n   headers:{\"Content-Type\": \"application/json\"}\n } \n  )\n  .catch(err=> {\n    console.log(\"error while sending ID \" + err);\n  })\n}\n\n\nexport const like = data => {\n  return axios\n  .post('/likes/addLike', {\n    question_id: data.post_id\n  })\n  .catch(err => {\n    console.log(err);\n  })\n}\n\nexport const changeUserInfo = data => {\n  return axios\n  .post(API, {\n    oldPWD: data.oldPWD,\n    newPWD: data.newPWD,\n    user_id: data.user_id\n  })\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {posts, comments } from \"./UserFunctions\";\n import \"../styles/questions.css\";\nconst API = \"/questions/showAll\"\nclass Landing extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        questionTitle: '',\n        questionText: '',\n        user_id: localStorage.getItem(\"usertoken\"),\n        commentText: '',\n        errors: {},\n        hits:[],\n    };\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.changeComment = this.changeComment.bind(this)\n    this.commentFunction = this.commentFunction.bind(this)\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  changeComment(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n    const new_question = {\n      questionTitle: this.state.questionTitle,\n      questionText: this.state.questionText,\n      user_id: this.state.user_id,\n    }\n\n    posts(new_question).then(res => {\n      if (res) {\n        this.props.history.push('/')\n      }\n    })\n  }\n\n  commentFunction(e) {\n    e.preventDefault()\n    const new_comment = {\n      commentText: this.state.commentText,\n      user_id: this.state.user_id\n    }\n    comments(new_comment).then(res => {\n      if(res)\n        this.props.history.push('/')\n    })\n  }\n\ncomponentDidMount(){\n  fetch(API)\n  .then(response => response.json())\n  .then(data => {this.setState({hits:data}); console.log(data)})\n}\n  render() {\n    const userInput = (\n      <form noValidate onSubmit={this.onSubmit}>\n            <h3>Post a new question</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"questionTitle\">Question Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"questionTitle\"\n                  placeholder=\"Enter title\"\n                  value={this.state.questionTitle}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"questionText\">Question Text</label>\n                <textarea\n                  className=\"form-control\"\n                  name=\"questionText\"\n                  placeholder=\"Text\"\n                  value={this.state.questionText}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-md btn-primary btn-block\"\n              >\n                Post the question\n              </button>\n            </form>\n          \n    )\n\n\n    const loginNew = (\n      <p>If you <Link to=\"/register\">register</Link> to our page you could contribute with answers and questions. </p>\n    )\n    const div = (\n      <div></div>\n    )\n    return (\n\n        <div className=\"container\">\n          <br/>\n            <div className=\"row\">\n          <div className=\"col-md-8 mt-5 mx-auto\">\n          {localStorage.usertoken ? userInput : loginNew}\n            \n        <h3>Latest Questions</h3>\n        <div className='row'>\n          {\n            this.state.hits.map(hit =>\n                <div className=\"post col-md-10 mt-5 mx-auto\">\n                    <h5>{hit.questionTitle}</h5>\n                    <p>Date posted: {hit.createdAt}</p>\n                      <Link to={`/post/${hit.id}`} className=\"linked\">\n                        Read more...\n                      </Link>\n                    <br/>\n                </div>\n              )\n          }\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from 'react'\nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    login(user).then(res => {\n      if (res) {\n        console.log('ok')\n        this.props.history.push(`/`)\n      }\n    }).catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\"\n              >\n                Sign in\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login","import React, { Component } from 'react'\nimport { register } from './UserFunctions'\n\nclass Register extends Component {\n  constructor() {\n    super()\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      errors: {}\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n\n    const newUser = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    register(newUser).then(res => {\n      this.props.history.push(`/`)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">First name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"first_name\"\n                  placeholder=\"Enter your first name\"\n                  value={this.state.first_name}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Last name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"last_name\"\n                  placeholder=\"Enter your lastname name\"\n                  value={this.state.last_name}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\"\n              >\n                Register!\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\nimport { Link } from 'react-router-dom'\nconst API='/users/profile'\nvar decoded = []\nclass Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ID : props.match.params.id,\n      first_name: '',\n      last_name: '',\n      email: '',\n      user_id: '',\n      errors: {},\n      hits: [],\n      posts: [],\n      decoded: [],\n    }\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick() {\n\n  }\n  \n  componentDidMount() {\n    const token = localStorage.getItem(\"usertoken\")\n    if (token){\n      decoded = jwt_decode(token);\n    }\n    const newID = JSON.stringify(decoded.id)\n    this.setState({user_id:newID})\n\n    fetch(`${API}/${this.state.ID}`)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({hits:data});\n      this.setState({posts:data.questions})\n      console.log(this.state.hits);\n    })\n  }\n\n  render() {\n    const div = (\n      <div></div>\n    )\n    const userForm = (\n      <button className=\"btn btn-outline-dark\"><Link to=\"/settings\">Settings</Link></button>\n    )\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">PROFILE</h1>\n          </div>\n          <table className=\"table col-md-6 mx-auto\">\n          {this.state.ID === this.state.user_id ? userForm : div}\n\n            <tbody>\n              <tr>\n                <td>Fist Name</td>\n                <td>{this.state.hits.first_name}</td>\n              </tr>\n              <tr>\n                <td>Last Name</td>\n                <td>{this.state.hits.last_name}</td>\n              </tr>\n              <tr>\n                <td>Email</td>\n                <td>{this.state.hits.email}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='col-md-8 mx-auto'>\n          <h3>Questions by the user</h3>\n        {\n            this.state.posts.map(post =>\n              <div className=\"post col-md-10 mt-5 mx-auto\">\n                    <h5>{post.questionTitle}</h5>\n                    <p>Date posted: {post.createdAt}</p>\n                      <Link to={`/post/${post.id}`} className=\"linked\">\n                        Read more...\n                      </Link>\n                    <br/>\n                </div>\n            \n                )\n            }\n      </div>\n          \n        </div>\n    )\n  }\n}\n\nexport default Profile","import React, { Component } from 'react'\nimport { comments, like, edit } from './UserFunctions'\nimport jwt_decode from 'jwt-decode';\nimport {Link} from 'react-router-dom';\n import \"../styles/questions.css\";\n const API = '/questions';\n const APID = '/comments';\nclass Post extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        ID : props.match.params.id,\n        user_id: localStorage.getItem(\"usertoken\"),\n        id: 0,\n        commentText: '',\n        hits:[],\n        user:[],\n        comments: [],\n        comments_user: [],\n        likes: 0,\n        questionTitle: '',\n        questionText: ''\n    }\n   this.edited = this.edited.bind(this)\n    this.changeComment = this.changeComment.bind(this)\n    this.commentFunction = this.commentFunction.bind(this)\n    this.liked = this.liked.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n   liked() {\n     const new_like = {\n      post_id:this.state.ID\n     }\n     like(new_like)\n   }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n   edited() {\n     const edits = {\n       id: this.state.ID,\n       questionText: this.state.questionText,\n       questionTitle: this.state.questionTitle\n     }\n     edit(edits);\n   }\n  commentFunction(e) {\n    e.preventDefault()\n    const new_comment = {\n      commentText: this.state.commentText,\n      post_id: this.state.ID,\n      user_id: this.state.user_id\n    }\n    comments(new_comment)\n  }\n\n  changeComment(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\ncomponentDidMount(){\n  var decode = jwt_decode(this.state.user_id);\n  this.setState({id: decode.id });\n\n  \n  let id = this.state.ID;\n  fetch(`${API}/${id}`)\n  .then(response => response.json())\n  .then(data => {\n    this.setState({hits:data});\n    this.setState({user:data.user})\n  }).catch(err => {\n    console.log(err)\n  })\n  fetch(`${APID}/${id}`)\n  .then(response => response.json())\n  .then(data => {\n    this.setState({comments:data})\n    this.setState({comments_user: data.user})\n  }).catch(err => {console.error(err)})\n\n  fetch(`/likes/${id}`).then(response=>response.json()).then(data=>{this.setState({likes: data.length})})\n}\n  render() {\n    const formForUser = (\n      <div>\n        <button style={{textAlign:'right'}} type=\"button\" className=\"btn btn-outline-dark\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n          Edit\n        </button>\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit question</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={this.edited} className='form-group'>\n                  <input type=\"text\" placeholder=\"Question title\" name='questionTitle' className='form-control' value={this.state.questionTitle} onChange={this.onChange}/>\n                  <textarea placeholder=\"Question text\" name='questionText' className='form-control' value={this.state.questionText} onChange={this.onChange}></textarea>\n                  <button type='submit' className='btn btn-primary'>Submit</button>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n    const commentsForUser = (\n      <div className=\"comment col-md-8 mx-auto\">\n        <form className=\"commentForm\" noValidate onSubmit={this.commentFunction}>\n          <div className='row'>\n            <div className='col-md-6 mx-auto'>\n              <input type='text' className='form-control' placeholder=\"Comment...\"  value={this.state.commentText} onChange={this.changeComment} name='commentText'/>\n            </div>\n            <div className=\"col-md-3 mx-auto\">\n              <button type='submit' className='btn btn-outline-light form-control'>Comment</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n\n    const div = (\n      <div></div>\n    )\n    return (\n\n\n        <div className=\"container-fluid\">\n        <h3>{this.state.hits.questionTitle}</h3>\n        <div className='row'>\n          {\n                <div className=\"post col-md-8 mt-5 mx-auto\">\n                    <div className=\"smallLine col-md-12\">\n                      <div>\n                        <Link to={`/profile/${this.state.user.id}`}>\n                        <p>{this.state.user.first_name} {this.state.user.last_name}</p>\n                        </Link>\n                      </div>\n                      <div>\n                        <p style={{textAlign:\"right\"}}>{this.state.hits.createdAt}</p>\n                      </div>\n                    </div>\n                    <h5>{this.state.hits.questionTitle}</h5>\n                    <p className=\"textPost\">{this.state.hits.questionText}</p>\n                    <br/>\n                    <div className=\"smallLineIcons col-md-12\">\n                      <div>\n                        <button className=\"btn btnDarkWhite\" onClick={this.liked}><i className=\"fa fa-thumbs-up icons\"></i> {this.state.likes}</button>\n                      </div>\n                    </div>\n                </div>\n          }\n          {this.state.user_id ? commentsForUser : div}\n          {\n            this.state.comments.map(comment => \n              <div className=\"comments col-md-8 mx-auto\">\n                <div className=\"smallLineNew col-md-12 mx-auto\">\n                  <p>Comment</p>\n                  </div>\n                <p>{comment.commentText}</p>\n                \n              </div>  \n            )\n          }\n          \n                            \n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;","import React, { Component } from 'react'\nimport {changeUserInfo } from \"./UserFunctions\";\n import \"../styles/questions.css\";\n import jwt_decode from 'jwt-decode';\nclass Settings extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        oldPassword: '',\n        newPassword: '',\n      };\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n    const decoded = jwt_decode(localStorage.getItem(\"usertoken\"))\n    const data = {\n      oldPWD: this.state.oldPassword,\n      newPWD: this.state.newPassword,\n      user_id: decoded.id,\n    }\n\n    changeUserInfo(data).then(res => {\n      if (res) {\n        this.props.history.push('/profile')\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div  className=\"container\">\n        <h1>Settings</h1>\n        <form className='form-group col-md-4 mx-auto' onSubmit={this.onSubmit}>\n          <input type=\"password\" className=\"form-control\" placeholder=\"Enter old password\" name=\"oldPassword\" value={this.state.oldPassword} onChange={this.onChange}/><br/>\n          <input type=\"password\" className=\"form-control\" placeholder=\"Enter new password\" name=\"newPassword\" value={this.state.newPassword} onChange={this.onChange}/><br/>\n          <button type=\"submit\" className=\"btn btn-outline-dark form-control\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Settings;","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\nimport Post from './components/Post'\nimport Settings from './components/Settings'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path='/settings' component={Settings} />\n            <Route exact path=\"/profile/:id\" component={Profile} />\n            <Route exact path=\"/post/:id\"  component={Post}/>\n\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport registerServiceWorker from './registerServiceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}