{"ast":null,"code":"var _jsxFileName = \"/Users/harunbajric/work/_askIT/client/src/components/Settings.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { posts, comments } from \"./UserFunctions\";\nimport \"../styles/questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000/questions/showAll\";\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.changeComment = this.changeComment.bind(this);\n    this.commentFunction = this.commentFunction.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  changeComment(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const new_question = {\n      questionTitle: this.state.questionTitle,\n      questionText: this.state.questionText,\n      user_id: this.state.user_id\n    };\n    posts(new_question).then(res => {\n      if (res) {\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  commentFunction(e) {\n    e.preventDefault();\n    const new_comment = {\n      commentText: this.state.commentText,\n      user_id: this.state.user_id\n    };\n    comments(new_comment).then(res => {\n      if (res) this.props.history.push('/');\n    });\n  }\n\n  componentDidMount() {\n    fetch(API).then(response => response.json()).then(data => {\n      this.setState({\n        hits: data\n      });\n      console.log(data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-group col-md-4 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"Enter new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-dark form-control\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/Users/harunbajric/work/_askIT/client/src/components/Settings.js"],"names":["React","Component","Link","posts","comments","API","Settings","constructor","props","state","password","onChange","bind","onSubmit","changeComment","commentFunction","e","setState","target","name","value","preventDefault","new_question","questionTitle","questionText","user_id","then","res","history","push","new_comment","commentText","componentDidMount","fetch","response","json","data","hits","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {posts, comments } from \"./UserFunctions\";\n import \"../styles/questions.css\";\nconst API = \"http://localhost:5000/questions/showAll\"\nclass Settings extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        password: '',\n      };\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.changeComment = this.changeComment.bind(this)\n    this.commentFunction = this.commentFunction.bind(this)\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  changeComment(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n    const new_question = {\n      questionTitle: this.state.questionTitle,\n      questionText: this.state.questionText,\n      user_id: this.state.user_id,\n    }\n\n    posts(new_question).then(res => {\n      if (res) {\n        this.props.history.push('/')\n      }\n    })\n  }\n\n  commentFunction(e) {\n    e.preventDefault()\n    const new_comment = {\n      commentText: this.state.commentText,\n      user_id: this.state.user_id\n    }\n    comments(new_comment).then(res => {\n      if(res)\n        this.props.history.push('/')\n    })\n  }\n\ncomponentDidMount(){\n  fetch(API)\n  .then(response => response.json())\n  .then(data => {this.setState({hits:data}); console.log(data)})\n}\n  render() {\n    return (\n      <div  className=\"container\">\n        <h1>Settings</h1>\n        <form className='form-group col-md-4 mx-auto'>\n          <input type=\"password\" className=\"form-control\" placeholder=\"Enter new password\"/><br/>\n          <button type=\"submit\" className=\"btn btn-outline-dark form-control\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}