{"ast":null,"code":"import axios from'axios';var API='/users/changeInfo';export var register=function register(newUser){return axios.post('users/register',{first_name:newUser.first_name,last_name:newUser.last_name,email:newUser.email,password:newUser.password}).then(function(response){console.log('Registered');});};export var login=function login(user){return axios.post('/users/login',{email:user.email,password:user.password,id:user.id}).then(function(response){localStorage.setItem('usertoken',response.data);return response.data;}).catch(function(err){console.log(err);});};export var posts=function posts(newPost){return axios.post('questions/create',{questionTitle:newPost.questionTitle,questionText:newPost.questionText,user_id:newPost.user_id}).catch(function(err){console.log(err);});};export var edit=function edit(newData){return axios.get('/questions/edit',{id:newData.id,questionText:newData.questionText,questionTitle:newData.questionTitle}).catch(function(err){console.log(err);});};export var comments=function comments(newComment){return axios.post('/comments/addComment',{commentText:newComment.commentText,user_id:newComment.user_id,question_id:newComment.post_id}).catch(function(err){console.log(err);});};export var sendData=function sendData(data){return axios.get('/questions/:id',{id:data.id}).catch(function(err){console.log(err);});};export var sendProfileId=function sendProfileId(userId){return axios.post('/users/findID',{id:userId.user_id}).catch(function(err){console.log(\"error from sendProfileId, UserFunctions.js\"+err);});};export var sendID=function sendID(userId){return axios.post('/questions/showMine',{user_id:userId.user_id},{headers:{\"Content-Type\":\"application/json\"}}).catch(function(err){console.log(\"error while sending ID \"+err);});};export var like=function like(data){return axios.post('/likes/addLike',{question_id:data.post_id}).catch(function(err){console.log(err);});};export var changeUserInfo=function changeUserInfo(data){return axios.post(API,{oldPWD:data.oldPWD,newPWD:data.newPWD,user_id:data.user_id});};","map":{"version":3,"sources":["/Users/harunbajric/work/_askIT/client/src/components/UserFunctions.js"],"names":["axios","API","register","newUser","post","first_name","last_name","email","password","then","response","console","log","login","user","id","localStorage","setItem","data","catch","err","posts","newPost","questionTitle","questionText","user_id","edit","newData","get","comments","newComment","commentText","question_id","post_id","sendData","sendProfileId","userId","sendID","headers","like","changeUserInfo","oldPWD","newPWD"],"mappings":"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","sourcesContent":["import axios from 'axios'\nconst API = '/users/changeInfo';\nexport const register = newUser => {\n  return axios\n    .post('users/register', {\n      first_name: newUser.first_name,\n      last_name: newUser.last_name,\n      email: newUser.email,\n      password: newUser.password\n    })\n    .then(response => {\n      console.log('Registered')\n    })\n}\n\nexport const login = user => {\n  return axios\n    .post('/users/login', {\n      email: user.email,\n      password: user.password,\n      id: user.id\n    })\n    .then(response => {\n      localStorage.setItem('usertoken', response.data)\n      return response.data\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\nexport const posts = newPost => {\n  return axios\n    .post('questions/create', {\n      questionTitle: newPost.questionTitle,\n      questionText: newPost.questionText,\n      user_id: newPost.user_id,\n      })\n    .catch(err => {\n      console.log(err)\n    })\n}\nexport const edit = newData => {\n  return axios.get('/questions/edit', {\n    id: newData.id,\n    questionText: newData.questionText,\n    questionTitle: newData.questionTitle\n  }).catch(err=>{console.log(err)})\n}\nexport const comments = newComment => {\n  return axios\n    .post('/comments/addComment', {\n      commentText: newComment.commentText,\n      user_id: newComment.user_id,\n      question_id:newComment.post_id,\n      })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const sendData = data => {\n  return axios\n  .get('/questions/:id', {\n    id: data.id,\n  })\n  .catch(err => {\n    console.log(err);\n  })\n}\nexport const sendProfileId = userId => {\n  return axios \n  .post('/users/findID', {\n    id: userId.user_id\n  }).catch(err => {\n\n    console.log(\"error from sendProfileId, UserFunctions.js\" + err);\n  })\n}\nexport const sendID = userId => {\n  return axios\n  .post('/questions/showMine', {\n    user_id: userId.user_id,\n  }, \n {\n   headers:{\"Content-Type\": \"application/json\"}\n } \n  )\n  .catch(err=> {\n    console.log(\"error while sending ID \" + err);\n  })\n}\n\n\nexport const like = data => {\n  return axios\n  .post('/likes/addLike', {\n    question_id: data.post_id\n  })\n  .catch(err => {\n    console.log(err);\n  })\n}\n\nexport const changeUserInfo = data => {\n  return axios\n  .post(API, {\n    oldPWD: data.oldPWD,\n    newPWD: data.newPWD,\n    user_id: data.user_id\n  })\n}\n"]},"metadata":{},"sourceType":"module"}