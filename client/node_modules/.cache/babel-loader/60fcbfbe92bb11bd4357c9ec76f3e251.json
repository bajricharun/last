{"ast":null,"code":"import _classCallCheck from\"/Users/harunbajric/work/_askIT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/harunbajric/work/_askIT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/harunbajric/work/_askIT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/harunbajric/work/_askIT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/harunbajric/work/_askIT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import jwt_decode from'jwt-decode';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var API='/users/profile';var decoded=[];var Profile=/*#__PURE__*/function(_Component){_inherits(Profile,_Component);var _super=_createSuper(Profile);function Profile(props){var _this;_classCallCheck(this,Profile);_this=_super.call(this,props);_this.state={ID:props.match.params.id,first_name:'',last_name:'',email:'',user_id:'',errors:{},hits:[],posts:[],decoded:[]};_this.onClick=_this.onClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Profile,[{key:\"onClick\",value:function onClick(){}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var token=localStorage.getItem(\"usertoken\");if(token){decoded=jwt_decode(token);}var newID=JSON.stringify(decoded.id);this.setState({user_id:newID});fetch(\"\".concat(API,\"/\").concat(this.state.ID)).then(function(response){return response.json();}).then(function(data){_this2.setState({hits:data});_this2.setState({posts:data.questions});console.log(_this2.state.hits);});}},{key:\"render\",value:function render(){var div=/*#__PURE__*/_jsx(\"div\",{});var userForm=/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark\",children:/*#__PURE__*/_jsx(Link,{to:\"/settings\",children:\"Settings\"})});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"jumbotron mt-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-8 mx-auto\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"PROFILE\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"table col-md-6 mx-auto\",children:[this.state.ID===this.state.user_id?userForm:div,/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Fist Name\"}),/*#__PURE__*/_jsx(\"td\",{children:this.state.hits.first_name})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Last Name\"}),/*#__PURE__*/_jsx(\"td\",{children:this.state.hits.last_name})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"td\",{children:this.state.hits.email})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8 mx-auto\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Questions by the user\"}),this.state.posts.map(function(post){return/*#__PURE__*/_jsxs(\"div\",{className:\"post col-md-10 mt-5 mx-auto\",children:[/*#__PURE__*/_jsx(\"h5\",{children:post.questionTitle}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date posted: \",post.createdAt]}),/*#__PURE__*/_jsx(Link,{to:\"/post/\".concat(post.id),className:\"linked\",children:\"Read more...\"}),/*#__PURE__*/_jsx(\"br\",{})]});})]})]});}}]);return Profile;}(Component);export default Profile;","map":{"version":3,"sources":["/Users/harunbajric/work/_askIT/client/src/components/Profile.js"],"names":["React","Component","jwt_decode","Link","API","decoded","Profile","props","state","ID","match","params","id","first_name","last_name","email","user_id","errors","hits","posts","onClick","bind","token","localStorage","getItem","newID","JSON","stringify","setState","fetch","then","response","json","data","questions","console","log","div","userForm","map","post","questionTitle","createdAt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\nimport { Link } from 'react-router-dom'\nconst API='/users/profile'\nvar decoded = []\nclass Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ID : props.match.params.id,\n      first_name: '',\n      last_name: '',\n      email: '',\n      user_id: '',\n      errors: {},\n      hits: [],\n      posts: [],\n      decoded: [],\n    }\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onClick() {\n\n  }\n  \n  componentDidMount() {\n    const token = localStorage.getItem(\"usertoken\")\n    if (token){\n      decoded = jwt_decode(token);\n    }\n    const newID = JSON.stringify(decoded.id)\n    this.setState({user_id:newID})\n\n    fetch(`${API}/${this.state.ID}`)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({hits:data});\n      this.setState({posts:data.questions})\n      console.log(this.state.hits);\n    })\n  }\n\n  render() {\n    const div = (\n      <div></div>\n    )\n    const userForm = (\n      <button className=\"btn btn-outline-dark\"><Link to=\"/settings\">Settings</Link></button>\n    )\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron mt-5\">\n          <div className=\"col-sm-8 mx-auto\">\n            <h1 className=\"text-center\">PROFILE</h1>\n          </div>\n          <table className=\"table col-md-6 mx-auto\">\n          {this.state.ID === this.state.user_id ? userForm : div}\n\n            <tbody>\n              <tr>\n                <td>Fist Name</td>\n                <td>{this.state.hits.first_name}</td>\n              </tr>\n              <tr>\n                <td>Last Name</td>\n                <td>{this.state.hits.last_name}</td>\n              </tr>\n              <tr>\n                <td>Email</td>\n                <td>{this.state.hits.email}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='col-md-8 mx-auto'>\n          <h3>Questions by the user</h3>\n        {\n            this.state.posts.map(post =>\n              <div className=\"post col-md-10 mt-5 mx-auto\">\n                    <h5>{post.questionTitle}</h5>\n                    <p>Date posted: {post.createdAt}</p>\n                      <Link to={`/post/${post.id}`} className=\"linked\">\n                        Read more...\n                      </Link>\n                    <br/>\n                </div>\n            \n                )\n            }\n      </div>\n          \n        </div>\n    )\n  }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}