{"ast":null,"code":"var _jsxFileName = \"/Users/harunbajric/work/_askIT/client/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport { comments } from './UserFunctions';\nimport \"../styles/questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = '/questions';\nconst APID = 'http://localhost:5000/comments';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ID: props.match.params.id,\n      user_id: localStorage.getItem(\"usertoken\"),\n      commentText: '',\n      hits: [],\n      user: [],\n      comments: [],\n      comments_user: []\n    };\n    this.changeComment = this.changeComment.bind(this);\n    this.commentFunction = this.commentFunction.bind(this);\n  }\n\n  commentFunction(e) {\n    e.preventDefault();\n    const new_comment = {\n      commentText: this.state.commentText,\n      post_id: this.state.ID,\n      user_id: this.state.user_id\n    };\n    comments(new_comment).then(res => {\n      if (res) console.log(\"ok\");\n    });\n  }\n\n  changeComment(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    let id = this.state.ID;\n    console.log(id);\n    fetch(`${API}/${id}`).then(response => response.json()).then(data => {\n      this.setState({\n        hits: data\n      });\n      this.setState({\n        user: data.user\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch(`${APID}/${id}`).then(response => response.json()).then(data => {\n      this.setState({\n        comments: data\n      });\n      this.setState({\n        comments_user: data.user\n      });\n    });\n  }\n\n  render() {\n    const commentsForUser = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment col-md-8 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"commentForm\",\n        noValidate: true,\n        onSubmit: this.commentFunction,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Comment...\",\n              value: this.state.commentText,\n              onChange: this.changeComment,\n              name: \"commentText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-outline-light form-control\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n\n    const div = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.hits.questionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post col-md-8 mt-5 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"smallLine col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.user.first_name, \" \", this.state.user.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: this.state.hits.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: this.state.hits.questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textPost\",\n            children: this.state.hits.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"smallLineIcons col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forms\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btnDarkWhite\",\n                onClick: this.onSubmit,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-thumbs-up icons\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 100\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btnDarkWhite\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-thumbs-down icons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 82\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), this.state.user_id ? commentsForUser : div, this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments col-md-8 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"smallLineNew col-md-12 mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.commentText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/harunbajric/work/_askIT/client/src/components/Post.js"],"names":["React","Component","comments","API","APID","Post","constructor","props","state","ID","match","params","id","user_id","localStorage","getItem","commentText","hits","user","comments_user","changeComment","bind","commentFunction","e","preventDefault","new_comment","post_id","then","res","console","log","setState","target","name","value","componentDidMount","fetch","response","json","data","catch","err","render","commentsForUser","div","questionTitle","first_name","last_name","textAlign","createdAt","questionText","onSubmit","map","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACC,OAAO,yBAAP;;AACA,MAAMC,GAAG,GAAG,YAAZ;AACA,MAAMC,IAAI,GAAG,gCAAb;;AACD,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAE3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACE,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EADb;AAEXC,MAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAFE;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,IAAI,EAAC,EAJM;AAKXC,MAAAA,IAAI,EAAC,EALM;AAMXhB,MAAAA,QAAQ,EAAE,EANC;AAOXiB,MAAAA,aAAa,EAAE;AAPJ,KAAb;AAUF,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDC,EAAAA,eAAe,CAACC,CAAD,EAAI;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAG;AAClBT,MAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWQ,WADN;AAElBU,MAAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWC,EAFF;AAGlBI,MAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAHF,KAApB;AAKAX,IAAAA,QAAQ,CAACuB,WAAD,CAAR,CAAsBE,IAAtB,CAA2BC,GAAG,IAAI;AAChC,UAAGA,GAAH,EACAC,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAHD;AAID;;AAEDV,EAAAA,aAAa,CAACG,CAAD,EAAI;AACf,SAAKQ,QAAL,CAAc;AAAE,OAACR,CAAC,CAACS,MAAF,CAASC,IAAV,GAAiBV,CAAC,CAACS,MAAF,CAASE;AAA5B,KAAd;AACD;;AAEHC,EAAAA,iBAAiB,GAAE;AACjB,QAAIvB,EAAE,GAAG,KAAKJ,KAAL,CAAWC,EAApB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,EAAZ;AACAwB,IAAAA,KAAK,CAAE,GAAEjC,GAAI,IAAGS,EAAG,EAAd,CAAL,CACCe,IADD,CACMU,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECX,IAFD,CAEMY,IAAI,IAAI;AACZ,WAAKR,QAAL,CAAc;AAACd,QAAAA,IAAI,EAACsB;AAAN,OAAd;AACA,WAAKR,QAAL,CAAc;AAACb,QAAAA,IAAI,EAACqB,IAAI,CAACrB;AAAX,OAAd;AACD,KALD,EAKGsB,KALH,CAKSC,GAAG,IAAI;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD,KAPD;AAQAL,IAAAA,KAAK,CAAE,GAAEhC,IAAK,IAAGQ,EAAG,EAAf,CAAL,CACCe,IADD,CACMU,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECX,IAFD,CAEMY,IAAI,IAAI;AACZ,WAAKR,QAAL,CAAc;AAAC7B,QAAAA,QAAQ,EAACqC;AAAV,OAAd;AACA,WAAKR,QAAL,CAAc;AAACZ,QAAAA,aAAa,EAAEoB,IAAI,CAACrB;AAArB,OAAd;AACD,KALD;AAMD;;AACCwB,EAAAA,MAAM,GAAG;AAEP,UAAMC,eAAe,gBACnB;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,UAAU,MAAxC;AAAyC,QAAA,QAAQ,EAAE,KAAKrB,eAAxD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,cAA7B;AAA4C,cAAA,WAAW,EAAC,YAAxD;AAAsE,cAAA,KAAK,EAAE,KAAKd,KAAL,CAAWQ,WAAxF;AAAqG,cAAA,QAAQ,EAAE,KAAKI,aAApH;AAAmI,cAAA,IAAI,EAAC;AAAxI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,oCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AAeA,UAAMwB,GAAG,gBACP;AAAA;AAAA;AAAA;AAAA,YADF;;AAGA,wBAGI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACA;AAAA,kBAAK,KAAKpC,KAAL,CAAWS,IAAX,CAAgB4B;AAArB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCAEQ;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,oCACE;AAAA,yBAAI,KAAKrC,KAAL,CAAWU,IAAX,CAAgB4B,UAApB,OAAiC,KAAKtC,KAAL,CAAWU,IAAX,CAAgB6B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,KAAK,EAAE;AAACC,gBAAAA,SAAS,EAAC;AAAX,eAAV;AAAA,wBAAgC,KAAKxC,KAAL,CAAWS,IAAX,CAAgBgC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,sBAAK,KAAKzC,KAAL,CAAWS,IAAX,CAAgB4B;AAArB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAG,YAAA,SAAS,EAAC,UAAb;AAAA,sBAAyB,KAAKrC,KAAL,CAAWS,IAAX,CAAgBiC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,sCACE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,kBAAhC;AAAmD,gBAAA,OAAO,EAAE,KAAKC,QAAjE;AAAA,uCAA2E;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,uCAAM;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,kBAAhC;AAAA,yCAAmD;AAAG,oBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,EAkBG,KAAK3C,KAAL,CAAWK,OAAX,GAAqB8B,eAArB,GAAuCC,GAlB1C,EAoBI,KAAKpC,KAAL,CAAWN,QAAX,CAAoBkD,GAApB,CAAwBC,OAAO,iBAC7B;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAIA,OAAO,CAACrC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAyCD;;AAlH0B;;AAqH7B,eAAeX,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { comments } from './UserFunctions'\n import \"../styles/questions.css\";\n const API = '/questions';\n const APID = 'http://localhost:5000/comments';\nclass Post extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        ID : props.match.params.id,\n        user_id: localStorage.getItem(\"usertoken\"),\n        commentText: '',\n        hits:[],\n        user:[],\n        comments: [],\n        comments_user: [],\n    };\n   \n    this.changeComment = this.changeComment.bind(this)\n    this.commentFunction = this.commentFunction.bind(this)\n  }\n   \n  commentFunction(e) {\n    e.preventDefault()\n    const new_comment = {\n      commentText: this.state.commentText,\n      post_id: this.state.ID,\n      user_id: this.state.user_id\n    }\n    comments(new_comment).then(res => {\n      if(res)\n      console.log(\"ok\")\n    })\n  }\n\n  changeComment(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\ncomponentDidMount(){\n  let id = this.state.ID;\n  console.log(id);\n  fetch(`${API}/${id}`)\n  .then(response => response.json())\n  .then(data => {\n    this.setState({hits:data});\n    this.setState({user:data.user})\n  }).catch(err => {\n    console.log(err)\n  })\n  fetch(`${APID}/${id}`)\n  .then(response => response.json())\n  .then(data => {\n    this.setState({comments:data})\n    this.setState({comments_user: data.user})\n  })\n}\n  render() {\n\n    const commentsForUser = (\n      <div className=\"comment col-md-8 mx-auto\">\n        <form className=\"commentForm\" noValidate onSubmit={this.commentFunction}>\n          <div className='row'>\n            <div className='col-md-6 mx-auto'>\n              <input type='text' className='form-control' placeholder=\"Comment...\"  value={this.state.commentText} onChange={this.changeComment} name='commentText'/>\n            </div>\n            <div className=\"col-md-3 mx-auto\">\n              <button type='submit' className='btn btn-outline-light form-control'>Comment</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n\n    const div = (\n      <div></div>\n    )\n    return (\n\n\n        <div className=\"container-fluid\">\n        <h3>{this.state.hits.questionTitle}</h3>\n        <div className='row'>\n          {\n                <div className=\"post col-md-8 mt-5 mx-auto\">\n                    <div className=\"smallLine col-md-12\">\n                      <p>{this.state.user.first_name} {this.state.user.last_name}</p>\n                      <p style={{textAlign:\"right\"}}>{this.state.hits.createdAt}</p>\n                    </div>\n                    <h5>{this.state.hits.questionTitle}</h5>\n                    <p className=\"textPost\">{this.state.hits.questionText}</p>\n                    <br/>\n                    <div className=\"smallLineIcons col-md-12\">\n                      <div className=\"forms\">\n                        <button type='submit' className=\"btn btnDarkWhite\" onClick={this.onSubmit}><i className=\"fa fa-thumbs-up icons\"></i></button>\n                        <form><button type='submit' className=\"btn btnDarkWhite\"><i className=\"fa fa-thumbs-down icons\"></i></button></form>\n                      </div>\n                    </div>\n                </div>\n          }\n          {this.state.user_id ? commentsForUser : div}\n          {\n            this.state.comments.map(comment => \n              <div className=\"comments col-md-8 mx-auto\">\n                <div className=\"smallLineNew col-md-12 mx-auto\">\n                  <p>Comment</p>\n                  </div>\n                <p>{comment.commentText}</p>\n                \n              </div>  \n            )\n          }\n          \n                            \n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}