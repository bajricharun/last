{"ast":null,"code":"var _jsxFileName = \"/Users/harunbajric/work/_askIT/client/src/components/MyQuestions.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { posts, sendID } from \"./UserFunctions\";\nimport \"../styles/questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000/questions/showMine\";\n\nclass myQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionTitle: '',\n      questionText: '',\n      user_id: localStorage.getItem(\"usertoken\"),\n      errors: {},\n      hits: []\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const new_question = {\n      questionTitle: this.state.questionTitle,\n      questionText: this.state.questionText,\n      user_id: this.state.user_id\n    };\n    posts(new_question).then(res => {\n      if (res) {\n        this.props.history.push('/');\n      }\n    });\n  }\n\n  componentDidMount() {\n    const user_id = {\n      user_id: this.state.user_id\n    };\n    sendID(this.state.user_id);\n    fetch(API).then(response => response.json()).then(data => {\n      this.setState({\n        hits: data\n      });\n      console.log(data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 mt-5 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Post a new question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"questionTitle\",\n                children: \"Question Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"questionTitle\",\n                placeholder: \"Enter title\",\n                value: this.state.questionTitle,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"questionText\",\n                children: \"Question Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                name: \"questionText\",\n                placeholder: \"Text\",\n                value: this.state.questionText,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-md btn-primary btn-block\",\n              children: \"Post the question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Latest Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.hits.map(hit => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post col-md-8 mt-5 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: hit.questionTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date posted: \", hit.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/post/${hit.id}`,\n            className: \"linked\",\n            children: \"Read more...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default myQuestions;","map":{"version":3,"sources":["/Users/harunbajric/work/_askIT/client/src/components/MyQuestions.js"],"names":["React","Component","Link","posts","sendID","API","myQuestions","constructor","props","state","questionTitle","questionText","user_id","localStorage","getItem","errors","hits","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","new_question","then","res","history","push","componentDidMount","fetch","response","json","data","console","log","render","map","hit","createdAt","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {posts, sendID } from \"./UserFunctions\"\n import \"../styles/questions.css\";\nconst API = \"http://localhost:5000/questions/showMine\"\nclass myQuestions extends Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        questionTitle: '',\n        questionText: '',\n        user_id: localStorage.getItem(\"usertoken\"),\n        errors: {},\n        hits:[],\n    };\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  onSubmit(e) {\n    e.preventDefault()\n    const new_question = {\n      questionTitle: this.state.questionTitle,\n      questionText: this.state.questionText,\n      user_id: this.state.user_id,\n    }\n\n    posts(new_question).then(res => {\n      if (res) {\n        this.props.history.push('/')\n      }\n    })\n  }\n\ncomponentDidMount(){\n  const user_id = {\n    user_id: this.state.user_id\n  }\n  sendID(this.state.user_id);\n  fetch(API)\n  .then(response => response.json())\n  .then(data => {this.setState({hits:data}); console.log(data)});\n\n}\n  render() {\n    return (\n\n        <div className=\"container\">\n          <br/>\n            <div className=\"row\">\n          <div className=\"col-md-8 mt-5 mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n            <h3>Post a new question</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"questionTitle\">Question Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"questionTitle\"\n                  placeholder=\"Enter title\"\n                  value={this.state.questionTitle}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"questionText\">Question Text</label>\n                <textarea\n                  className=\"form-control\"\n                  name=\"questionText\"\n                  placeholder=\"Text\"\n                  value={this.state.questionText}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-md btn-primary btn-block\"\n              >\n                Post the question\n              </button>\n            </form>\n          </div>\n        </div><br/>\n        <h3>Latest Questions</h3>\n        <div className='row'>\n          {\n            this.state.hits.map(hit =>\n                <div className=\"post col-md-8 mt-5 mx-auto\">\n                    <h5>{hit.questionTitle}</h5>\n                    <p>Date posted: {hit.createdAt}</p>\n                      <Link to={`/post/${hit.id}`} className=\"linked\">\n                        Read more...\n                      </Link>\n                    <br/>\n                </div>\n              )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default myQuestions;"]},"metadata":{},"sourceType":"module"}